{{- if .Values.ingress.create }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "nginx.fullname" . }}
{{- with .Values.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
{{- end }}
spec:
{{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
      - "{{ .Values.service.serverName }}"
    secretName: "{{ .Values.SSL.nginxTLSSecret }}"
{{- end}}
  rules:
  - host: "{{ .Values.service.serverName }}"
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: {{ include "nginx.fullname" . }}
            port:
              number: {{ .Values.service.httpPort }}
---
{{- if .Values.ingress.admin_ip_whitelist }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "nginx.fullname" . }}-admin
  annotations:
    nginx.ingress.kubernetes.io/whitelist-source-range: "{{ .Values.ingress.admin_ip_whitelist }}"
  {{- with .Values.ingress.annotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
{{- if .Values.ingress.tls.enabled }}
  tls:
  - hosts:
      - "{{ .Values.service.serverName }}"
    secretName: "{{ .Values.SSL.nginxTLSSecret }}"
{{- end}}
  rules:
  - host: "{{ .Values.service.serverName }}"
    http:
      paths:
      - path: /admin
        pathType: Prefix
        backend:
          service:
            name: {{ include "nginx.fullname" . }}
            port:
              number: {{ .Values.service.httpPort }}
{{- end }}
{{- end }}
